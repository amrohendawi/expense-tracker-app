services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: expense-tracker-postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    command: >
      postgres
      -c wal_level=logical
      -c max_wal_senders=10
      -c max_replication_slots=10
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Prisma Migration Service
  prisma-migrate:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: expense-tracker-prisma-migrate
    environment:
      POSTGRES_PRISMA_URL: postgresql://postgres:postgres@postgres:5432/postgres?schema=public
      POSTGRES_URL_NON_POOLING: postgresql://postgres:postgres@postgres:5432/postgres?schema=public
    volumes:
      - ./prisma:/app/prisma
      - ./package.json:/app/package.json
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "npm install prisma && npx prisma migrate deploy"

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: expense-tracker-app
    restart: always
    ports:
      - "3000:3000"
    environment:
      # Database connection
      POSTGRES_PRISMA_URL: postgresql://postgres:postgres@postgres:5432/postgres?schema=public
      POSTGRES_URL_NON_POOLING: postgresql://postgres:postgres@postgres:5432/postgres?schema=public
      
      # Supabase connection - using direct PostgreSQL connection since we're not running Supabase
      SUPABASE_URL: http://postgres:5432
      SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
      
      # Clerk Auth - these need to be provided when running the container
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY:-your-pub-key}
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY:-your-secret-key}
      
      # OpenAI API Key - needed for receipt processing
      OPENAI_API_KEY: ${OPENAI_API_KEY:-your-openai-api-key}
      
      # Node environment
      NODE_ENV: production
    depends_on:
      postgres:
        condition: service_healthy
      prisma-migrate:
        condition: service_completed_successfully

volumes:
  postgres-data:
